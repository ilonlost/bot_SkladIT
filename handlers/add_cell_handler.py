from io import BytesIO
from PIL import Image
from pyzbar.pyzbar import decode
import qrcode
import telebot



def return_to_main_menu(bot, message):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)


    keyboard.add(
        telebot.types.KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å"),
        telebot.types.KeyboardButton("üîç –ü–æ–∏—Å–∫"),
        telebot.types.KeyboardButton("üì¶ –ò–Ω–≤–µ–Ω—Ç")
    )
    keyboard.add(
        telebot.types.KeyboardButton("üÜï –Ø—á–µ–π–∫–∞"),
        telebot.types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å"),
        telebot.types.KeyboardButton("‚ôªÔ∏è –£—Ç–∏–ª—å")
    )
    keyboard.add(
        telebot.types.KeyboardButton("üì§ –í—ã–¥–∞—Ç—å"),
        telebot.types.KeyboardButton("üì∏ –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥")
    )

    bot.send_message(
        message.chat.id,
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard
    )


def cell_menu(bot, conn, message):

    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    create_btn = telebot.types.KeyboardButton("üÜï –°–æ–∑–¥–∞—Ç—å")
    edit_btn = telebot.types.KeyboardButton("üõ† –ò–∑–º–µ–Ω–∏—Ç—å")
    markup.add(create_btn, edit_btn)
    bot.send_message(message.chat.id, "üì¶ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

    bot.register_next_step_handler(message, lambda msg: handle_cell_action(bot, conn, msg))


def handle_cell_action(bot, conn, message):

    if message.text.strip() == "üÜï –°–æ–∑–¥–∞—Ç—å":
        add_cell(bot, conn, message)
    elif message.text.strip() == "üõ† –ò–∑–º–µ–Ω–∏—Ç—å":
        request_cell_image(bot, conn, message)
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        cell_menu(bot, conn, message)


def request_cell_image(bot, conn, message):

    msg = bot.send_message(message.chat.id,
                           "üì∏ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ QR-–∫–æ–¥–∞ —è—á–µ–π–∫–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.")
    bot.register_next_step_handler(msg, lambda msg: process_cell_image(bot, conn, msg))


def process_cell_image(bot, conn, message):

    if message.content_type == 'photo':
        file_id = message.photo[-1].file_id
        file_info = bot.get_file(file_id)
        downloaded_file = bot.download_file(file_info.file_path)


        image = Image.open(BytesIO(downloaded_file))
        decoded_objects = decode(image)

        if decoded_objects:
            cell_number = decoded_objects[0].data.decode('utf-8')
            request_cell_change(bot, conn, message, cell_number)
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å QR-–∫–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            request_cell_image(bot, conn, message)
    else:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ QR-–∫–æ–¥–∞.")
        request_cell_image(bot, conn, message)


def request_cell_change(bot, conn, message, cell_number):

    cursor = conn.cursor()

    try:


        cursor.execute("SELECT * FROM Cells WHERE cell_number = ?", (cell_number,))
        row = cursor.fetchone()

        if row:
            msg = bot.send_message(message.chat.id, "üìù *–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —è—á–µ–π–∫–∏:*")
            bot.register_next_step_handler(msg, lambda m: process_update_cell(bot, conn, m, cell_number))
        else:
            bot.send_message(message.chat.id, "‚ùå –Ø—á–µ–π–∫–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            request_cell_image(bot, conn, message)
    except Exception as e:
        bot.send_message(message.chat.id, f"üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        return_to_main_menu(bot, message)

    def process_update_cell(bot, conn, message, cell_number):

        short_name = message.text.strip()


        update_cell(bot, conn, message, cell_number, short_name)

    def update_cell(bot, conn, message, cell_number, short_name):

        cursor = conn.cursor()

        try:

            query = "UPDATE Cells SET short_name = ? WHERE cell_number = ?"
            cursor.execute(query, (short_name, cell_number))
            conn.commit()


            bot.send_message(message.chat.id, "‚úÖ *–Ø—á–µ–π–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞.*")
            return_to_main_menu(bot, message)
        except Exception as e:
            bot.send_message(message.chat.id, f"üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —è—á–µ–π–∫—É: {str(e)}")
            return_to_main_menu(bot, message)
def add_cell(bot, conn, message):

        msg = bot.send_message(message.chat.id, "üè∑ *–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏:*")
        bot.register_next_step_handler(msg, lambda m: process_cell_number(bot, conn, m))

def process_cell_number(bot, conn, message):

        cell_number = message.text.strip()
        msg = bot.send_message(message.chat.id, "üìù *–í–≤–µ–¥–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —è—á–µ–π–∫–∏:*")
        bot.register_next_step_handler(msg, lambda m: process_cell_description(bot, conn, m, cell_number))

def process_cell_description(bot, conn, message, cell_number):

        short_name = message.text.strip()


        save_cell(bot, conn, message, cell_number, short_name)

def save_cell(bot, conn, message, cell_number, short_name):

        cursor = conn.cursor()

        try:

            query = "INSERT INTO Cells (cell_number, short_name) VALUES (?, ?)"
            cursor.execute(query, (cell_number, short_name))
            conn.commit()


            bot.send_message(message.chat.id, "‚úÖ *–Ø—á–µ–π–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.*")


            qr_data = f"{cell_number}"
            qr_code = qrcode.make(qr_data)
            img_byte_arr = BytesIO()

            qr_code.save(img_byte_arr, format='PNG')
            img_byte_arr.seek(0)


            bot.send_photo(message.chat.id, img_byte_arr, caption="üì∏ *–í–∞—à QR-–∫–æ–¥ –¥–ª—è —ç—Ç–æ–π —è—á–µ–π–∫–∏:*")
            return_to_main_menu(bot, message)
        except Exception as e:
            bot.send_message(message.chat.id, f"üö´ –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —è—á–µ–π–∫—É: {str(e)}")
            return_to_main_menu(bot, message)
