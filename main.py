import telebot
import logging
import time
import traceback
from telebot import types
from config.conn_TG import bot_token
from config.conn_DB import connection_string
from handlers.add_handler import add_menu
from handlers.utill_handler import add_write_off
from handlers.add_cell_handler import cell_menu
from handlers.delete_handler import delete_equipment
from handlers.search_handler import search_equipment
from handlers.inventory_handler import inventory_start
from handlers.add_asset_handler import add_asset
from handlers.scan_qr_handler import request_photo
from config.conn_id import ADMIN_CHAT_ID


conn = connection_string()
bot = telebot.TeleBot(bot_token)



def send_error_message(error_message):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """
    bot.send_message(ADMIN_CHAT_ID, error_message)

@bot.message_handler(commands=['a'])
def start(message):
    # –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞
    raise Exception("–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–æ–∫")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    keyboard.add(
        types.KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å"),
        types.KeyboardButton("üîç –ü–æ–∏—Å–∫"),
        types.KeyboardButton("üì¶ –ò–Ω–≤–µ–Ω—Ç")
    )
    keyboard.add(
        types.KeyboardButton("üÜï –Ø—á–µ–π–∫–∞"),
        types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å"),
        types.KeyboardButton("‚ôªÔ∏è –£—Ç–∏–ª—å")
    )
    keyboard.add(
        types.KeyboardButton("üì§ –í—ã–¥–∞—Ç—å"),
        types.KeyboardButton("üì∏ QR-–∫–æ–¥")
    )

    bot.send_message(
        message.chat.id,
        " –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–∫–ª–∞–¥! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ "–í—ã–¥–∞—Ç—å"
@bot.message_handler(func=lambda message: message.text == "üì§ –í—ã–¥–∞—Ç—å")
def start_add_process(message):
    add_asset(bot, None, message)

@bot.message_handler(func=lambda message: message.text == "üì∏ QR-–∫–æ–¥")
def start_qr_scan_process(message):
    request_photo(message, bot)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ "–î–æ–±–∞–≤–∏—Ç—å"
@bot.message_handler(func=lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å")
def start_add_process(message):
    add_menu(bot, conn, message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ "–£—Ç–∏–ª—å"
@bot.message_handler(func=lambda message: message.text == "‚ôªÔ∏è –£—Ç–∏–ª—å")
def start_write_off_process(message):
    add_write_off(bot, conn, message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ "–î–æ–±–∞–≤–∏—Ç—å —è—á–µ–π–∫—É"
@bot.message_handler(func=lambda message: message.text == "üÜï –Ø—á–µ–π–∫–∞")
def start_add_cell_process(message):
    cell_menu(bot, conn, message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ "–£–¥–∞–ª–∏—Ç—å"
@bot.message_handler(func=lambda message: message.text == "‚ùå –£–¥–∞–ª–∏—Ç—å")
def start_delete_process(message):
    delete_equipment(bot, conn, message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ "–ü–æ–∏—Å–∫"
@bot.message_handler(func=lambda message: message.text == "üîç –ü–æ–∏—Å–∫")
def start_search_process(message):
    search_equipment(bot, conn, message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ "–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è"
@bot.message_handler(func=lambda message: message.text == "üì¶ –ò–Ω–≤–µ–Ω—Ç")
def start_inventory_process(message):
    inventory_start(bot, conn, message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ "–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è"
@bot.message_handler(func=lambda message: message.text == "–ú–µ–Ω—é")
def return_to_main_menu(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)


    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    keyboard.add(
        types.KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å"),
        types.KeyboardButton("üîç –ü–æ–∏—Å–∫"),
        types.KeyboardButton("üì¶ –ò–Ω–≤–µ–Ω—Ç")
    )
    keyboard.add(
        types.KeyboardButton("üÜï –Ø—á–µ–π–∫–∞"),
        types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å"),

        types.KeyboardButton("‚ôªÔ∏è –£—Ç–∏–ª—å")
    )
    keyboard.add(
        types.KeyboardButton("üì§ –í—ã–¥–∞—Ç—å"),
        types.KeyboardButton("üì∏ –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥")
    )

    bot.send_message(
        message.chat.id,
        " –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard
    )

def main():
    while True:
        try:
            logging.info("Bot started")
            bot.polling(none_stop=True)
        except Exception as e:
            error_message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}\n{traceback.format_exc()}"
            send_error_message(error_message)
            logging.error(f"Bot crashed: {e}")
            time.sleep(5)  # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º

if __name__ == '__main__':
    main()
